WEBVTT
Kind: captions
Language: en

00:00:01.250 --> 00:00:05.200
In the last week of this course, we looked
at some advanced topics, so let us begin with

00:00:05.200 --> 00:00:06.450
Linear Programming.

00:00:06.450 --> 00:00:13.880
So, the times of problems we have looked at
so far are largely optimization type of tasks.

00:00:13.880 --> 00:00:18.550
So, we are looking for shortest paths in a
graph or we are trying to identify the minimum

00:00:18.550 --> 00:00:24.150
cost spanning tree or we are looking for the
longest common subsequence. So, we are trying

00:00:24.150 --> 00:00:29.439
to optimize some quantity the length of the
path, or the cost of the tree or the length

00:00:29.439 --> 00:00:35.350
of the sub sequence, and then this come this
optimization takes place subject to a constraint.

00:00:35.350 --> 00:00:40.040
So, when we are looking for paths, the constraints
are given by the graph itself, so the path

00:00:40.040 --> 00:00:44.630
must follow the given edges in the graph.
So, as the graph changes the path that we

00:00:44.630 --> 00:00:48.590
identified will also change. Similarly, we
are looking for spanning trees with respect

00:00:48.590 --> 00:00:52.710
to a given graph. So, in each graph we ask
to first identify the different spanning trees

00:00:52.710 --> 00:00:57.110
and look for the smallest cost one among them.
Similarly, with two sub sequences the actual

00:00:57.110 --> 00:01:02.079
letters in the sequence determine what is
common between them.

00:01:02.079 --> 00:01:09.800
So, we can look at a more general formulation
of such constraint optimization problems in

00:01:09.800 --> 00:01:15.980
the framework of what is called linear programming.
So, in linear programming we are given some

00:01:15.980 --> 00:01:20.939
variables, some quantities that we want to
calculate and then there are some linear functions

00:01:20.939 --> 00:01:25.920
that constraint these quantities. So, linear
function remember of a variable x is something

00:01:25.920 --> 00:01:33.010
of the form a x plus b. So, it has no x square
x cube term, it is all linear, so we have

00:01:33.010 --> 00:01:36.530
a x plus b.
So, in general then if we have multiple variables

00:01:36.530 --> 00:01:41.490
x y z, then we could have a constraint of
the form a x plus b y plus something is less

00:01:41.490 --> 00:01:45.710
than equal to some constant or a x plus b
y plus something is greater than equal to

00:01:45.710 --> 00:01:52.100
some constant. And then, these are the constraints
on the values that the variables can take

00:01:52.100 --> 00:01:57.950
and now our aim is to optimize some quantity,
we want to minimize or maximize some cause

00:01:57.950 --> 00:02:01.950
or some weights or something like that and
that quantity is expressed in terms of the

00:02:01.950 --> 00:02:05.840
variable by yet another linear function.
So, we have some function which I will again

00:02:05.840 --> 00:02:09.660
write as a x plus b y, but it is a different
set of coefficients of course, for each other

00:02:09.660 --> 00:02:13.870
constraints and for the objective function.
So, we have a different linear function which

00:02:13.870 --> 00:02:17.390
tells us what it is we are trying to optimize.

00:02:17.390 --> 00:02:23.130
So, the best way to understand linear programming
to begin with is to look at an example. So,

00:02:23.130 --> 00:02:29.680
suppose we are running a sweets shop called
grandiose sweets and we tell sell two types

00:02:29.680 --> 00:02:36.170
of sweets, barfis and halwa. Now, we know
that each box of barfis earns a profit of

00:02:36.170 --> 00:02:42.310
100 rupees and each box of halwa earns a profit
of 600 rupees. So obviously, it makes sense

00:02:42.310 --> 00:02:49.590
to make more halwa than barfis. Now, we also
know that on a given day we cannot sell more

00:02:49.590 --> 00:02:56.849
than 200 barfi boxes, we cannot sell more
than 300 halwa boxes and together the staff

00:02:56.849 --> 00:03:03.250
can only produce 400 boxes. So, now if you
make 400 boxes, we can only sell 300 halwa,

00:03:03.250 --> 00:03:08.519
200 barfis, so we need to make both. So, the
question is given these constraints, what

00:03:08.519 --> 00:03:13.090
combination of barfis and halwa should we
make.

00:03:13.090 --> 00:03:19.920
So, let us start by identifying the variables
that we are trying to manipulate. So, we’re

00:03:19.920 --> 00:03:24.450
talking about the daily production of these
sweets, so we will use two variables b and

00:03:24.450 --> 00:03:31.010
h to denote the number of boxes of barfis
and halwa that we produce in a day. Now, given

00:03:31.010 --> 00:03:38.379
this we know that our profit is 100 rupees
per box of barfis and 600 rupees for box of

00:03:38.379 --> 00:03:45.370
halwa. So, it is totally 100 b plus 600 h,
we also have some information about how much

00:03:45.370 --> 00:03:50.011
we can sell, so you know that we cannot sell
more than 200 boxes of barfi a day.

00:03:50.011 --> 00:03:53.520
So, b must be less than or equal to 200 and
we cannot sell more than 300 boxes of halwa

00:03:53.520 --> 00:04:00.900
a day, so h must be less than or equal to
300. And finally, we have told that together

00:04:00.900 --> 00:04:07.879
our staff are only capable of producing 400
boxes altogether, whether barfi or halwa any

00:04:07.879 --> 00:04:13.019
combination and implicitly of course, we can
only make a non zero quantity of barfis, so

00:04:13.019 --> 00:04:17.710
we cannot make minus 7 boxes of barfis. So,
we have these implicit constraints, we say

00:04:17.710 --> 00:04:24.560
that both b and h must be greater than zero.
So, now we can put these all together into

00:04:24.560 --> 00:04:30.389
a set of inequalities and then an objective
function and call it a linear program.

00:04:30.389 --> 00:04:36.400
So, our objective is to maximize the profit,
so this is the profit, so this is what we

00:04:36.400 --> 00:04:42.919
are trying to maximize, the quantity 100 b
plus 600 h and we cannot choose obviously,

00:04:42.919 --> 00:04:46.590
if b and h can vary, then we can make them
as large as we want, but there are these constraints.

00:04:46.590 --> 00:04:53.520
So, b and h must lie between 0 and 200 and
0 and 300 respectively and together they can

00:04:53.520 --> 00:04:59.351
be no more than 400. So, these are the constraints
we wrote in the previous page, now we are

00:04:59.351 --> 00:05:04.630
just writing them down, the system of equations
are inequalities.

00:05:04.630 --> 00:05:08.810
So, we can visualize this quite easily in
this case, because there are two quantities

00:05:08.810 --> 00:05:14.050
basically b and h that we want to compute
and we are given a set of facts about them.

00:05:14.050 --> 00:05:21.820
So, we know that b lies between 0 and 200,
so the range for b is anything in this region.

00:05:21.820 --> 00:05:28.310
At the same time, we also know that h lies
between 0 and 300, so this constraints the

00:05:28.310 --> 00:05:31.789
space that we can look at to this rectangle.

00:05:31.789 --> 00:05:39.229
And finally, we have the other constraint
that together b plus h must be less than 400,

00:05:39.229 --> 00:05:44.690
so now that’s on this side of this lines.
So, we now have to be within this trapezium.

00:05:44.690 --> 00:05:51.100
So, overall this gives us what we can call
a feasible region, any point to in this region

00:05:51.100 --> 00:05:57.280
represents a combination of b value and h
value which means all the constraints. Now,

00:05:57.280 --> 00:06:05.350
we have to introduce our profit function,
so our objective is 100 b plus 600 h and depending

00:06:05.350 --> 00:06:10.870
on what values that b and h we choose, this
will be equal to sum c. So, we can examine

00:06:10.870 --> 00:06:12.819
what this looks like for different values
of c.

00:06:12.819 --> 00:06:20.780
So, for example, if you set our profit to
be 60,000 then any quantity along this line,

00:06:20.780 --> 00:06:27.250
any value of b and h which is inside the orange
feasible region will give us 60,000. All these

00:06:27.250 --> 00:06:32.562
points give us 100 b plus 600 h equal to 60,000.
Now, if I move this line across this region,

00:06:32.562 --> 00:06:34.180
the value changes.

00:06:34.180 --> 00:06:38.830
If I move it further or I can go from 60,000
to 1,20,000, 1 lakh 20,000.

00:06:38.830 --> 00:06:44.340
If I move it still further, I can get 1 lakh
50,000.

00:06:44.340 --> 00:06:49.440
When that line actually leaves the region,
at that corner vertex where the trapezium

00:06:49.440 --> 00:06:56.280
turns bends down, we find that we can get
1 lakh 90,000 and it turns out that this is

00:06:56.280 --> 00:07:01.610
actually going to be the optimum value. Now,
this optimum value happens at some corner

00:07:01.610 --> 00:07:06.530
of this trapezium and this is generally the
case, one can argue that the optimal value

00:07:06.530 --> 00:07:11.009
will always occur at a vertex. Because, as
we saw here the function we are trying to

00:07:11.009 --> 00:07:17.450
optimize is a line and as we sweep across
the feasible region, the value will keep either

00:07:17.450 --> 00:07:21.220
increasing or decreasing and so far where
it leaves the region it will be some vertex.

00:07:21.220 --> 00:07:26.440
Now, it could be that supposing this optimum
line that actually been parallel to this,

00:07:26.440 --> 00:07:30.780
then both this vertex and this vertex would
both have been optimal perhaps and on every

00:07:30.780 --> 00:07:35.199
point along this line. So, it is not saying
that there are not optimal values away from

00:07:35.199 --> 00:07:39.610
vertices, but definitely there will be some
vertex which has an optimum value. So, our

00:07:39.610 --> 00:07:44.020
goal is only to find an optimum solution,
it is enough to look at the vertices.

00:07:44.020 --> 00:07:51.720
So, in fact, this is how the very famous simplest
simplex algorithm works. So, what it does

00:07:51.720 --> 00:07:56.949
is, it constructs this feasible region which
is bounded by our constraints and then it

00:07:56.949 --> 00:08:02.840
picks a vertex. So, we will not discuss it
in detail, but you have to generalize this

00:08:02.840 --> 00:08:07.650
notion of a corner, in two dimensions it is
quite easy to imagine what a vertex is. But,

00:08:07.650 --> 00:08:12.430
in we have multiple constraints we have to
optimize more than two dimensions, then you

00:08:12.430 --> 00:08:19.020
need to define vertex properly, but intuitively
a vertex is a corner of this feasible region.

00:08:19.020 --> 00:08:23.979
So, we start at any of these vertices, evaluate
the objective function, then we look at the

00:08:23.979 --> 00:08:29.210
neighboring vertices. If any adjacent vertex,
any neighbor has a better value we move to

00:08:29.210 --> 00:08:33.950
that neighbor, if none of our neighbors are
better than us, in terms of the objective

00:08:33.950 --> 00:08:39.010
then we stop and announce that this vertex
is the optimal. So, we will not go into a

00:08:39.010 --> 00:08:44.410
proof in this lecture that this is, if it
is actually correct, but it is not hard to

00:08:44.410 --> 00:08:48.490
argue this, but there of course, a lot of
details which need to be worked out to implement

00:08:48.490 --> 00:08:53.160
simplex correctly.
So, one of the problems which simplex is theoretically

00:08:53.160 --> 00:08:58.690
can be exponential, but actually in practice
it turns out to be a very effective algorithm

00:08:58.690 --> 00:09:03.910
to solve linear programs. Now, there are theoretically
efficient algorithms, so there is a polynomial

00:09:03.910 --> 00:09:08.470
time algorithm for linear programming, is
there are so called the interior point methods

00:09:08.470 --> 00:09:13.410
and there is a method due to Narendra Karmarkar
which many people may have heard of.

00:09:13.410 --> 00:09:18.140
These are more complicated to describe and
programs, simplex is probably easier to program,

00:09:18.140 --> 00:09:23.360
but what we need to know as far as we are
concerned is that once you set up a set of

00:09:23.360 --> 00:09:29.760
constraints and an objective function using
linear constraints, you can solve it efficiently.

00:09:29.760 --> 00:09:37.260
So, of course, you also have to when a solution
is exist. So, in our case we had a solution

00:09:37.260 --> 00:09:42.870
where we had a feasible region which looks
like a trapezium like this. So, the first

00:09:42.870 --> 00:09:48.510
point is that the feasible region will already
be convex, convex means that if you take any

00:09:48.510 --> 00:09:54.149
two points inside the region and you can connect
them by a line, the entire line stays in the

00:09:54.149 --> 00:09:58.440
region. So, for instance if I have a shape
which looks like this, then this is not convex,

00:09:58.440 --> 00:10:03.950
because I can pick two points inside and then
connected by a line and this line in this

00:10:03.950 --> 00:10:09.870
portion leaves the region.
So, the feasible space will always be convex,

00:10:09.870 --> 00:10:13.779
but it could be empty. Supposing, we had an
extra constraint in an earlier thing which

00:10:13.779 --> 00:10:18.710
says that everything must be below this line,
now when addition to the orange if I had this

00:10:18.710 --> 00:10:21.899
blue constraint, then there is no point that
satisfies everything. So, the constraints

00:10:21.899 --> 00:10:25.800
are unsatisfiable, the feasible region become
empty and there will be no solutions. The

00:10:25.800 --> 00:10:31.410
other possibility is that we do not constrain
it enough, so we could just say that supposing

00:10:31.410 --> 00:10:35.670
we started only, we only say that say for
example, h must be less than 300, then this

00:10:35.670 --> 00:10:40.269
has an unbounded region.
So, as I draw my blue line as I have done

00:10:40.269 --> 00:10:44.220
before and I keep moving it up, it says that
profit keeps increasing, there is no upper

00:10:44.220 --> 00:10:48.959
point. So, there are these pathological cases
where either the feasible region is empty

00:10:48.959 --> 00:10:53.290
or it is unbounded, where you will not find
the solution. But, if it is bounded, then

00:10:53.290 --> 00:10:57.570
what the theory of linear programming tells
us is that the objective function will lie,

00:10:57.570 --> 00:11:02.970
it is maximum or minimum will lie along on
a vertex along the boundary of that bounded

00:11:02.970 --> 00:11:09.080
region and so it is sufficient to examine
those and that is what simplex does.

00:11:09.080 --> 00:11:15.820
So, just to get a little bit more practice
at this, let us extend the example. So, now,

00:11:15.820 --> 00:11:20.570
in addition to our barfi and halwa which have
the same details as before a 100 rupee profit

00:11:20.570 --> 00:11:27.220
for barfis, 600 for halwa we added almond
rasmalai which gives us a much higher profit

00:11:27.220 --> 00:11:33.450
of 1300. An almond rasmalai actually people
are willing to buy in an unlimited quantity.

00:11:33.450 --> 00:11:38.150
So, the earlier demand for barfis and halwa
is the same, 200 and 300, but almond rasmalai

00:11:38.150 --> 00:11:43.800
can be sold in unlimited amounts.
Unfortunately, we have not got any new staff,

00:11:43.800 --> 00:11:48.769
so we are still restricted to producing a
total of 400 boxes and now we have an extra

00:11:48.769 --> 00:11:53.950
constraint which is in terms of what we can
do with the milk that we get. So, with the

00:11:53.950 --> 00:12:00.020
milk that we get we can either makes 600 boxes
of halwa in a day or 200 of rasmalai or any

00:12:00.020 --> 00:12:05.670
combination of this. So, effectively a box
of rasmalai requires three times as much as

00:12:05.670 --> 00:12:11.019
milk as a box of halwa. So, now, again given
these constraints we want to find out what

00:12:11.019 --> 00:12:17.270
is the most optimum production schedule that
we should impose on our sweet shop.

00:12:17.270 --> 00:12:22.670
So, if we look at the equation now, the objective
function now has an extra quantity which is

00:12:22.670 --> 00:12:27.240
the profit we get from rasmalai. So, we have
an extra variable, we have b and h which are

00:12:27.240 --> 00:12:32.709
as before barfi and halwa and r for rasmalai,
so we can get 100 rupees per box of barfi,

00:12:32.709 --> 00:12:40.450
600 rupees per box of halwa and 1300 per box
of rasmalai. The constraints on barfi and

00:12:40.450 --> 00:12:44.320
halwa demand are the same and there is no
constraint for rasmalai, so we do not add

00:12:44.320 --> 00:12:49.180
anything there. The total production now includes
the rasmalai, so all three together must be

00:12:49.180 --> 00:12:57.050
blue 400 and this expressives the milk constraint.
So, this is at one extreme, I can make 600

00:12:57.050 --> 00:13:01.520
boxes of the halwa, at the other extreme I
can make 200 boxes of rasmalai, because 200

00:13:01.520 --> 00:13:05.779
times replace 600 rupees. But, I can make
any combination and that would produces, requires

00:13:05.779 --> 00:13:10.193
the same amount of milk or less. So, h plus
3 r must be less than equal to 600, so this

00:13:10.193 --> 00:13:17.540
is the milk constraint. And finally, of course,
all three of these quantities must be bigger

00:13:17.540 --> 00:13:18.779
than or equal to 0.

00:13:18.779 --> 00:13:23.420
So, in this case if we draw this picture,
now it becomes a three dimensional geometrical

00:13:23.420 --> 00:13:29.230
object, because we have three axis b, h and
now r coming out in the vertical direction

00:13:29.230 --> 00:13:34.230
and the constraints now instead of the lines,
they become these planes. So, the kind of

00:13:34.230 --> 00:13:40.860
become now instead of a polygon, we have what
is called polytope, we have a three dimensional

00:13:40.860 --> 00:13:47.209
object. And again we will find that you get
the optimum at some corner and the optimum

00:13:47.209 --> 00:13:53.770
happens to be in this case that you make zero
barfis, you make a full amount 300 halwa and

00:13:53.770 --> 00:14:02.920
then you make the rest into rasmalai and then
you get a profit of 3 lakhs 10,000.

00:14:02.920 --> 00:14:13.440
So, so we might ask, is this really the case?
So, is this really our best thing? So, remember

00:14:13.440 --> 00:14:21.300
that if I do this, I get 300 into 600, so
I get 1 lakh 80,000 from here and you get

00:14:21.300 --> 00:14:26.760
1 lakh 30,000 for here and thus how we get
a 3 lakhs 10,000. So, is it how do I know

00:14:26.760 --> 00:14:32.570
that this answer is actually the best? So,
here is an interesting observation that we

00:14:32.570 --> 00:14:35.840
can make. So, these are some of the constraints
that we had before, we had just remove the

00:14:35.840 --> 00:14:41.300
one which says that the three values b, h
and r are greater than zero, because that

00:14:41.300 --> 00:14:45.360
is not useful.
Now, in this supposing I take the three constraints

00:14:45.360 --> 00:14:50.440
labeled A, B and C. Now, in general if I take
a constraint and I multiplied, so if I say

00:14:50.440 --> 00:14:56.209
2 h is less than equal to 600. So, we know
from simple algebra that this is same as h

00:14:56.209 --> 00:15:00.250
is less than equal to 300. So, in the same
way I can multiply each constraint by a constant,

00:15:00.250 --> 00:15:05.160
I can also combine them. I can take some combination
of A plus some combination of B plus some

00:15:05.160 --> 00:15:09.470
combination of C, it tells us nothing new,
we just combines it in a different format.

00:15:09.470 --> 00:15:17.530
So, supposing I take 100 times this and I
take 100 times B again and I take 400 times

00:15:17.530 --> 00:15:27.200
C and I add them, so I will get 100 h plus
100 h plus 400 h that is 600 h. Then I will

00:15:27.200 --> 00:15:36.970
get 100 b and finally, I will get 1200 plus
100, it is 1300 r. So, combining A, B and

00:15:36.970 --> 00:15:43.370
C with this combination or I multiply A by
100, B by 100, C by 400, I produce some new

00:15:43.370 --> 00:15:50.480
inequality. But, this new inequality tells
us something interesting, because in fact

00:15:50.480 --> 00:15:52.680
what we have on the left hand side is our
profit.

00:15:52.680 --> 00:15:59.170
So, the profit is exactly 100 b plus 600 h,
1300 r, we are trying to maximize this and

00:15:59.170 --> 00:16:03.440
what our constraints tell us is that in the
feasible region, this value can be no more

00:16:03.440 --> 00:16:15.620
than three something it should be, 3 lakhs
10,000. In other words, this is actually the

00:16:15.620 --> 00:16:20.880
optimum profit, because from our constraints
we can derive the fact that we cannot get

00:16:20.880 --> 00:16:26.500
anything more than this, hence this must be
an optimum value. So, in this particular example

00:16:26.500 --> 00:16:31.800
it seems that we can prove to ourselves that
we have achieved an optimum by just doing

00:16:31.800 --> 00:16:34.329
something clever with that constraint.

00:16:34.329 --> 00:16:40.470
So, it turns out that fortunately this is
not a coincidence, it turns out you can always

00:16:40.470 --> 00:16:46.810
construct such a combination. So, if I have
my constraints C 1, C 2, so these are my constraint

00:16:46.810 --> 00:16:54.850
equations, I can always find some combination.
So, I can take some lambda 1 C 1, lambda 2

00:16:54.850 --> 00:16:59.630
C 2, I can add these up and then I can get
from that some upper bound and that upper

00:16:59.630 --> 00:17:04.040
bound will actually tell me, whether or not
the solution I found is correct. So, this

00:17:04.040 --> 00:17:09.480
is called the dual of the LP and again we
are not going to look into the theory of this,

00:17:09.480 --> 00:17:16.100
but this is useful to know that we can take
the formulation that we start with for LP

00:17:16.100 --> 00:17:22.230
and then we can ask an another question which
is what is the minimum value that we can get

00:17:22.230 --> 00:17:25.410
by combining the constraints with some linear
multipliers.

00:17:25.410 --> 00:17:28.990
So, we get new variables which are exactly
these multipliers. What are the values of

00:17:28.990 --> 00:17:36.940
lambda 1 to lambda k which minimize the combination
lambda 1 C 1 plus lambda 2 C 2 plus lambda

00:17:36.940 --> 00:17:44.650
k C k? So, this is my new question, I want
to minimize this and then this becomes another

00:17:44.650 --> 00:17:49.090
LP problem and I solve that and it turns out
that the dual and the original have a solution

00:17:49.090 --> 00:17:53.320
if and only if that solution is the optimum
for both. So, this gives us the one way of

00:17:53.320 --> 00:17:57.570
justifying that I given linear programming
problem has been solved correctly.

